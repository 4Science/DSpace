#---------------------------------------------------------------#
#--------------------XOAI CONFIGURATIONS------------------------#
#---------------------------------------------------------------#
# These configs are used by the XOAI                            #
#---------------------------------------------------------------#

# Storage: solr | database 
storage=solr

# The base URL of the OAI webapp (do not include the context e.g. /request, /openaire, etc).
# Note: leave commented if you want to fallback to the request's URL.
# dspace.oai.url = ${dspace.baseUrl}/oai

# Base solr index
solr.url=${solr.server}/${solr.multicorePrefix}oai
# OAI persistent identifier prefix.
# Format - oai:PREFIX:HANDLE
identifier.prefix = ${dspace.hostname}
# Base url for bitstreams
bitstream.baseUrl = ${dspace.url}

# Base Configuration Directory
config.dir = ${dspace.dir}/config/crosswalks/oai

# Description
description.file = ${dspace.dir}/config/crosswalks/oai/description.xml

# Cache enabled?
cache.enabled = true

# Base Cache Directory
cache.dir = ${dspace.dir}/var/oai

#---------------------------------------------------------------#
#--------------OAI HARVESTING CONFIGURATIONS--------------------#
#---------------------------------------------------------------#
# These configs are only used by the OAI-ORE related functions  #
#---------------------------------------------------------------#

### Harvester settings

# Crosswalk settings; the {name} value must correspond to a declared ingestion crosswalk
# harvester.oai.metadataformats.{name} = {namespace},{optional display name}
# The display name is only used in the xmlui; for the jspui there are entries in the
# Messages.properties in the form jsp.tools.edit-collection.form.label21.select.{name}
harvester.oai.metadataformats.dc = http://www.openarchives.org/OAI/2.0/oai_dc/, Simple Dublin Core
harvester.oai.metadataformats.qdc = http://purl.org/dc/terms/, Qualified Dublin Core
harvester.oai.metadataformats.dim = http://www.dspace.org/xmlns/dspace/dim, DSpace Intermediate Metadata

# This field works in much the same way as harvester.oai.metadataformats.PluginName
# The {name} must correspond to a declared ingestion crosswalk, while the
# {namespace} must be supported by the target OAI-PMH provider when harvesting content.
# harvester.oai.oreSerializationFormat.{name} = {namespace}

# Determines whether the harvester scheduling process should be started
# automatically when the DSpace webapp is deployed.
# default: false
harvester.autoStart=false

# Amount of time subtracted from the "from" argument of the OAI-PMH request to account
# for the time taken to negotiate a connection. Measured in seconds. Default value is 120.
#harvester.timePadding = 120

# How frequently the harvest scheduler checks the remote provider for updates,
# measured in minutes. The default vaule is 12 hours (or 720 minutes)
#harvester.harvestFrequency = 720

# The heartbeat is the frequency at which the harvest scheduler queries the local
# database to determine if any collections are due for a harvest cycle (based on
# the harvestFrequency) value. The scheduler is optimized to sleep after the check until the
# next collection is actually ready to be harvested. The minHeartbeat and
# maxHeartbeat are the lower and upper bounds on this timeframe. Measured in seconds.
# Default minHeartbeat is 30.  Default maxHeartbeat is 3600.
#harvester.minHeartbeat = 30
#harvester.maxHeartbeat = 3600

# How many harvest process threads the scheduler can spool up at once. Default value is 3.
#harvester.maxThreads = 3

# How much time passess before a harvest thread is terminated. The termination process
# waits for the current item to complete ingest and saves progress made up to that point.
# Measured in hours. Default value is 24.
#harvester.threadTimeout = 24

# When harvesting an item that contains an unknown schema or field within a schema what
# should the harvester do? Either add a new registry item for the field or schema, ignore
# the specific field or schema (importing everything else about the item), or fail with
# an error. The default value if undefined is: fail.
# Possible values: 'fail', 'add', or 'ignore'
harvester.unknownField  = add
harvester.unknownSchema = fail

# The webapp responsible for minting the URIs for ORE Resource Maps.
# If using oai, the dspace.oai.uri config value must be set.
# The URIs generated for ORE ReMs follow the following convention for both cases.
# format: [baseURI]/metadata/handle/[theHandle]/ore.xml
# Default value is oai
#ore.authoritative.source = oai

# A harvest process will attempt to scan the metadata of the incoming items
# (dc.identifier.uri field, to be exact) to see if it looks like a handle.
# If so, it matches the pattern against the values of this parameter.
# If there is a match the new item is assigned the handle from the metadata value
# instead of minting a new one. Default value: hdl.handle.net
#harvester.acceptedHandleServer = hdl.handle.net, handle.myu.edu

# Pattern to reject as an invalid handle prefix (known test string, for example)
# when attempting to find the handle of harvested items. If there is a match with
# this config parameter, a new handle will be minted instead. Default value: 123456789.
#harvester.rejectedHandlePrefix = 123456789, myTestHandle

# page size
#
# oai.discover.pagesize = 100

# Filter cris properties:'
# The format of the filter is
#   <oai.filtered><cris property> = true
#
# oai.filtered.crisproject.principalinvestigator = true

#
# advanced customization:
#
# oai.discover.query.item = discoverable:true AND search.resourcetype:2
# oai.discover.query.crisrp = discoverable:true AND search.resourcetype:9
# oai.discover.query.crisproject = discoverable:true AND search.resourcetype:10
# oai.discover.query.crisou = discoverable:true AND search.resourcetype:11
# oai.discover.query.crisother = discoverable:true AND search.resourcetype:{1000 TO 10000}
# oai.discover.query.crisjournals = discoverable:true AND cris-id:journals*
# ...
# oai.discover.query.all = discoverable:true
#
#
# oai.erase.query.item = item.type:item
# oai.erase.query.crisrp = item.type:rp
# oai.erase.query.crisproject = item.type:project
# oai.erase.query.crisou = item.type:ou
# oai.erase.query.crisother = NOT (item.type:item OR item.type:rp OR item.type:project OR item.type:uo)
# oai.erase.query.crisjournals = item.type:journals
# ...
# oai.erase.query.all = *:*
#

#
# include cris metadata related to the following
# authority of given metadata
#
# The format of the attribute is:
#   <oai.authority>.<metadata> = true/false
#
# oai.authority.dc.contributor.author = true
# oai.authority.dc.description.sponsorship = true
# oai.authority.dc.relation = true
# oai.authority.dc.relation.ispartof = true
# oai.authority.dc.subject = true
# oai.authority.dc.relation.conference = true

###
#  oai: Mappings cris property to virtual property.
#
# Default object virtual properties:
#   crisitem.crisvprop.id           (the cris object id)
#   crisitem.crisvprop.uuid         (the cris objet uuid)
#   crisitem.crisvprop.handle       (the cris object handle)
#   crisitem.crisvprop.objecttype   (the cris object public path -journals, ...-
#
# Virtual metadata used inside oai_cerif.xsl are:
#   cris object journals:
#       crisitem.crisvprop.journalsname    (the name of the journal)
#       crisitem.crisvprop.journalsissn    (the issn of the journal)
##
# Syntax of crisitem mapping:
#   oai.map is the property prefix
#   journals.crisitem.crisprop.journalsname is the cris property used to hold the
#           journal name with the objecttype prefix.
#   Remember that each cris property is on the format crisitem.crisprop.<name of the
#           cris property associated with cris object definition>
#
# (OPTIONAL, possibly multiple 0..*) The title of the publication
oai.map.crisjournals.journalsname = crisitem.crisvprop.journalsname
# (OPTIONAL, possibly multiple 0..*) The International Standard Serial Number
oai.map.journals.crisitem.crisprop.journalsissn = crisitem.crisvprop.issn
##
# Syntax of item mapping:
#   oai.map is the property prefix
#   dc.date.issued is the item property used to hold the
#           publication date.
#   Remember that each item property is a metadata associated to the item.
#
#   Use metadata-placeholder-x when a metadata is unknown or comment out the mapping.
# (OPTIONAL 0..1) The date the publication appeared
oai.map.dc.date.issued = item.vprop.publicationdate
# (OPTIONAL 0..1) The volume of the publishing channel where this publication appeared
oai.map.metadata-placeholder-1 = item.vprop.volume
# (OPTIONAL 0..1) The edition of the publication
oai.map.metadata-placeholder-2 = item.vprop.issue
# (OPTIONAL 0..1) The page where this publication starts, in case the publishing channel or containing publication has numbered pages
oai.map.metadata-placeholder-3 = oai.map.item.vprop.startpage
# (OPTIONAL 0..1) The page where this publication ends, in case the publishing channel or containing publication has numbered pages
oai.map.metadata-placeholder-4 = oai.map.item.vprop.endpage
# (OPTIONAL 0..1) The Digital Object Identifier
oai.map.dc.identifier.doi = item.vprop.doi
# (MANDATORY 1) The type of the publication
oai.map.dc.type = item.vprop.type
# (OPTIONAL, possibly multiple 0..*) The title of the publication
oai.map.dc.title = item.vprop.title
##
# Relations
#
# Syntax of the relation mapping:
#   oai.map is the property prefix
#   relation.ispartof is the item metadata used to hold a cris item id.
#
# See also "oai relation"
###
oai.map.dc.relation.ispartof = item.vrelation.ispartof
oai.map.dc.contributor.author = item.vrelation.author
