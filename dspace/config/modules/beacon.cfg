### Configuration for Generation of Beacon Files

#module.active = true
module.active = true
##Expand Links in output
link.expand = true 
#entry.shortform 
#Shortform - No Name or Link, just the gnd; only together with link.expand
#link.url = 
#Url between baseurl and Identifier part of path - e.g. /Cris/ or /gnd/
#link.type = 
#crisid, uuid, gnd -> identifiertype of crisobjects in output (e.g. gnd must be specified to your Servlet settings)
feed.url = /beacon
#message.fix = Person in CRIS {NAME}
#identifier =  
## String: Identifier Link, Pattern of Token separated by {ID}
#identifier.expand 
## boolean: expand identifier in output

## String: Replacement Pattern{ID}
identifier.replacement = {ID} 
identifier = http://d-nb.info/gnd/{ID}

## boolean: ignore private State of Cris Property
property.ignoreprivate = false 

## String: Name of Property with identifier. We need the solrkey
crisproperty = crisrp.gnd


header.fix.path = ${dspace.dir}/config/modules/beacon_header.txt
#Path to generated File
filepath = ${dspace.dir}/config/beacon.txt

link.type = crisid
link.url = /cris/
message.fix = Your Repository Name
link.expand = true
entry.shortform = true

## URL to See Also Link - Provider
##ID token is shortened as {{ID}}
#seealso.link = http://beacon:8080/seealso?type=gnd&format=seealso&id={{ID}}
#seealso.link = http://beacon.findbuch.de/pnd-resolver/bvblod?format=seealso&id={{ID}}
##box specific links
#seealso.Beacon.link = http://beacon.findbuch.de/seealso/pnd-aks?format=seealso&id={{ID}}
#seealso.testbeacon.link = http://beacon:8080/seealso?type=gnd&format=seealso&id={{ID}}
