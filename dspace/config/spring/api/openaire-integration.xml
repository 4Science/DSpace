<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-autowire-candidates="*Service,*DAO,javax.sql.DataSource">

    <context:annotation-config/>
    <!-- allows us to use spring annotations in beans -->

    <util:map id="openaireMetadataFieldMap" key-type="org.dspace.importer.external.metadatamapping.MetadataFieldConfig"
              value-type="org.dspace.importer.external.metadatamapping.contributor.MetadataContributor">
        <description>Defines which metadatum is mapped on which metadatum. Note that while the key must be unique it
            only matters here for postprocessing of the value. The mapped MetadatumContributor has full control over
            what metadatafield is generated.
        </description>
        <entry key-ref="dc.title" value-ref="openaireTitle"/>
        <entry key-ref="dc.identifier.other" value-ref="openaireCode"/>
    </util:map>
    
    <bean id="openaireTitle" class="org.dspace.importer.external.metadatamapping.contributor.SimpleXpathMetadatumContributor">
        <property name="field" ref="dc.title"/>
        <property name="query" value=".//title"/>
        <property name="prefixToNamespaceMapping" ref="prefixToNamespaceMapping"/>
    </bean>

    <bean id="openaireCode" class="org.dspace.importer.external.metadatamapping.contributor.SimpleXpathMetadatumContributor">
        <property name="field" ref="dc.identifier.other"/>
        <property name="query" value=".//code"/>
        <property name="prefixToNamespaceMapping" ref="prefixToNamespaceMapping"/>
    </bean>

    <util:map id="prefixToNamespaceMapping">
    </util:map>
</beans>