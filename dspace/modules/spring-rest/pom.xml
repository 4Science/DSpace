<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.dspace.modules</groupId>
    <artifactId>spring-rest</artifactId>
    <packaging>war</packaging>
    <name>DSpace Spring Rest:: Local Customizations</name>
    <description>Overlay REST customizations.
This is probably a temporary solution to the build problems. We like to investigate about 
the possibility to remove the overlays enable a more flexible extension mechanism. 
The use of web-fragment and spring mvc technology allow us to add request handlers 
just adding new jar in the classloader</description>

    <parent>
        <artifactId>modules</artifactId>
        <groupId>org.dspace</groupId>
        <version>CRIS-7.0.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <properties>
       <!-- This is the path to the root [dspace-src] directory. -->
       <root.basedir>${basedir}/../../..</root.basedir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>		
    </properties>
	
    <profiles>
        <profile>
            <id>oracle-support</id>
            <activation>
                <property>
                    <name>db.name</name>
                    <value>oracle</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.oracle</groupId>
                    <artifactId>ojdbc6</artifactId>
                </dependency>
            </dependencies>
        </profile>
<!--         <profile>
            <id>addon-ckan</id>
			<activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
			        <dependency>
			             <groupId>it.4science.dspace</groupId>
						 <artifactId>addon-ckan-api</artifactId>
						 <version>${ckan.addon.modules}</version>
						 <type>jar</type>
			        </dependency>
			        <dependency>
			             <groupId>it.4science.dspace</groupId>
						 <artifactId>addon-ckan-jspui</artifactId>
						 <version>${ckan.addon.modules}</version>
						 <type>war</type>
			        </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>addon-iiif</id>
            <activation>
                <property>
                    <name>iiif.on</name>
                </property>
            </activation>
			<dependencies>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-iiif-api</artifactId>
					<version>${iiif.addon.modules}</version>
					<type>jar</type>
				</dependency>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-iiif-jspui</artifactId>
					<version>${iiif.addon.modules}</version>
					<type>war</type>
				</dependency>
			</dependencies>		                    
	    </profile>
	
		<profile>
			<id>addon-ocr</id>
            <activation>
                <property>
                    <name>ocr.on</name>
                </property>
            </activation>
			<dependencies>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-ocr-api</artifactId>
					<version>${ocr.addon.modules}</version>
					<type>jar</type>
				</dependency>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-annoiiif-api</artifactId>
					<version>${annoiiif.addon.modules}</version>
					<type>jar</type>
				</dependency>
			</dependencies>
		</profile>
	
		<profile>
			<id>addon-document-viewer</id>
            <activation>
                <property>
                    <name>docviewer.on</name>
                </property>
            </activation>
			<dependencies>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-docviewer-api</artifactId>
					<version>${docviewer.addon.modules}</version>
					<type>jar</type>
				</dependency>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-docviewer-jspui</artifactId>
					<version>${docviewer.addon.modules}</version>
					<type>war</type>
				</dependency>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-annoiiif-api</artifactId>
					<version>${annoiiif.addon.modules}</version>
					<type>jar</type>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>addon-av-streaming</id>
            <activation>
                <property>
                    <name>audiovideo.on</name>
                </property>
            </activation>
			<dependencies>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-video-api</artifactId>
					<version>${av.addon.modules}</version>
					<type>jar</type>
				</dependency>
				<dependency>
					<groupId>it.4science.dspace</groupId>
					<artifactId>addon-video-jspui</artifactId>
					<version>${av.addon.modules}</version>
					<type>war</type>
				</dependency>
			</dependencies>
		</profile>		                
 -->        
    </profiles>
    
    <build>
        <plugins>
            <!-- Unpack the "additions" module into our target directory,
                 so that any custom classes in that module can be included
                 into this WAR's WEB-INF/classes (see maven-war-plugin below). -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.dspace.modules</includeGroupIds>
                            <includeArtifactIds>additions</includeArtifactIds>
                            <!--NOTE: by default this will also unpack transitive dependencies. To disable, uncomment this next line:
                            <excludeTransitive>true</excludeTransitive>
                            -->
                            <outputDirectory>${project.build.directory}/additions</outputDirectory>
                            <excludes>META-INF/**</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archiveClasses>false</archiveClasses>
                    <!-- Filter the web.xml (needed for IDE compatibility/debugging) -->
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                    <!-- Copy any 'additions' (see m-dependency-p above) into WEB-INF/classes.
                         This ensures they are loaded prior to dependencies in WEB-INF/lib
                         (per Servlet 3.0 spec, section 10.5), and allows them to override
                         default classes in this WAR -->
                    <webResources>
                        <resource>
                            <directory>${project.build.directory}/additions</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                    </webResources>
                    <overlays>
                        <!--
                           the priority of overlays is determined here
                           1.) default: anything in the current project has highest
                           2.) anything defined here has precedence in the order defined
                           3.) any war found transitively in the dependencies will be applied
                           next. the order is unpredictable.
                        -->
                        <overlay>
                            <groupId>org.dspace</groupId>
                            <artifactId>dspace-spring-rest</artifactId>
                        </overlay>
                    </overlays>                    
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
	
	<dependencies>

		<dependency>
			<groupId>org.dspace</groupId>
			<artifactId>dspace-cris-api</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-expression</artifactId>
				</exclusion>
				<exclusion>
          			<groupId>com.fasterxml</groupId>
          			<artifactId>classmate</artifactId>
        		</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.htmlcleaner</groupId>
			<artifactId>htmlcleaner</artifactId>
		</dependency>

		<dependency>
			<groupId>org.dspace</groupId>
			<artifactId>jargon</artifactId>
		</dependency>

		<dependency>
			<groupId>org.dspace.modules</groupId>
			<artifactId>additions</artifactId>
		</dependency>

        <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-spring-rest</artifactId>            
            <type>war</type>
        </dependency>
        
        <dependency>
            <groupId>org.dspace</groupId>
            <artifactId>dspace-spring-rest</artifactId>            
			<type>jar</type>
            <classifier>classes</classifier>
        </dependency>        
	</dependencies>

</project>
